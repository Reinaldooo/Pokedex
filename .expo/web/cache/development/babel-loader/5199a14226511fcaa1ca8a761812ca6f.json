{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/reinaldo/Desktop/Apps/pokedex/screens/PokemonDetail.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-size: 14px;\\n  text-align: justify;\\n  line-height: 22px;\\n  margin: 10px 20px;\\n  color: rgb(72, 72, 74);\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  text-transform: uppercase;\\n  color: \", \";\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  height: 30px;\\n  padding: 5px 10px;\\n  border: 2px solid \", \";\\n  border-radius: 10px;\\n  align-items: center;\\n  justify-content: center;\\n  /* background-color: blue; */\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  height: 50px;\\n  width: 60%;\\n  /* background-color: red; */\\n  flex-direction: row;\\n  justify-content: space-evenly;\\n  align-items: center;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-size: 22px;\\n  font-weight: bold;\\n  color: rgb(72, 72, 74);\\n  margin-bottom: 10px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: white;\\n  margin: 30px;\\n  border-radius: 10px;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: \\\"rgb(229,229,234)\\\";\\n  height: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components/native\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { capitalize, generateEvolutionChain, pokeApi } from \"../utils\";\nimport { executeSql } from \"../dbUtils\";\nimport PokemonImage from \"../components/PokemonImage\";\nimport Stats from \"../components/Stats\";\nimport EvolutionChain from \"../components/EvolutionChain\";\nimport HeartButton from \"../components/HeartButton\";\nvar Container = styled.ScrollView(_templateObject());\nvar Card = styled.View(_templateObject2());\nvar Name = styled.Text(_templateObject3());\nvar Types = styled.View(_templateObject4());\nvar Type = styled.View(_templateObject5(), function (props) {\n  return props.color;\n});\nvar TypeLabel = styled.Text(_templateObject6(), function (props) {\n  return props.color;\n});\nvar Description = styled.Text(_templateObject7());\nexport default function PokemonDetail(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(new Animated.Value(0)),\n      _useState2 = _slicedToArray(_useState, 1),\n      fadeAnim = _useState2[0];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      localDetails = _useState4[0],\n      setLocalDetails = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      apiDetails = _useState6[0],\n      setApiDetails = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fetchOk = _useState8[0],\n      setFetchOk = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  var _route$params = route.params,\n      id = _route$params.id,\n      evolution_chain = _route$params.evolution_chain;\n  useEffect(function () {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500\n    }).start();\n    setFetchOk(false);\n    executeSql(\"select * from pokemon where id = ?;\", [id]).then(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 1),\n          p = _ref3[0];\n\n      p.types = JSON.parse(p.types);\n      setLocalDetails(p);\n    });\n    var isMounted = true;\n    fetch(pokeApi + \"pokemon/\" + id).then(function (data) {\n      return data.json();\n    }).then(function (_ref4) {\n      var stats = _ref4.stats,\n          weight = _ref4.weight,\n          height = _ref4.height;\n      return {\n        stats: stats,\n        height: height,\n        weight: weight\n      };\n    }).catch(function () {\n      return \"Error\";\n    }).then(function (pokemon) {\n      fetch(pokeApi + \"evolution-chain/\" + evolution_chain).then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        if (data) {\n          var chain = data.chain;\n          chain = generateEvolutionChain(chain);\n\n          if (isMounted) {\n            setApiDetails(_objectSpread({}, pokemon, {\n              chain: chain\n            }));\n            setFetchOk(true);\n          }\n        }\n      }).catch(function (e) {\n        return \"Error\";\n      });\n    });\n    return function () {\n      return isMounted = false;\n    };\n  }, [id]);\n\n  var setOwned = function setOwned(data, id) {\n    executeSql(\"update pokemon set owned = ? where id = ?;\", [data, id]);\n  };\n\n  var scrollRef = useRef();\n\n  var _ref5 = localDetails && localDetails,\n      name = _ref5.name,\n      types = _ref5.types,\n      sprite = _ref5.sprite,\n      desc = _ref5.desc,\n      color = _ref5.color,\n      owned = _ref5.owned;\n\n  return React.createElement(Animated.View, {\n    style: {\n      opacity: fadeAnim\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    ref: scrollRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, localDetails.name && React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, React.createElement(HeartButton, {\n    owned: owned,\n    id: id,\n    setOwned: setOwned,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), React.createElement(PokemonImage, {\n    size: \"150px\",\n    uri: sprite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), React.createElement(Name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, capitalize(name)), React.createElement(Types, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, types.map(function (type) {\n    return React.createElement(Type, {\n      key: type.slot,\n      color: \"rgb(72, 72, 74)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, React.createElement(TypeLabel, {\n      color: \"rgb(72, 72, 74)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, type.type.name));\n  })), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, desc), React.createElement(Stats, {\n    apiDetails: apiDetails,\n    color: color,\n    fetchOk: fetchOk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), React.createElement(EvolutionChain, {\n    apiDetails: apiDetails,\n    navigation: navigation,\n    sprite: sprite,\n    color: color,\n    scrollRef: scrollRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/reinaldo/Desktop/Apps/pokedex/screens/PokemonDetail.js"],"names":["React","useState","useEffect","useRef","styled","capitalize","generateEvolutionChain","pokeApi","executeSql","PokemonImage","Stats","EvolutionChain","HeartButton","Container","ScrollView","Card","View","Name","Text","Types","Type","props","color","TypeLabel","Description","PokemonDetail","route","navigation","Animated","Value","fadeAnim","localDetails","setLocalDetails","apiDetails","setApiDetails","fetchOk","setFetchOk","error","setError","params","id","evolution_chain","timing","toValue","duration","start","then","p","types","JSON","parse","isMounted","fetch","data","json","stats","weight","height","catch","pokemon","chain","e","setOwned","scrollRef","name","sprite","desc","owned","opacity","map","type","slot"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components/native\";\nimport { Animated } from \"react-native\";\n//\nimport { capitalize, generateEvolutionChain, pokeApi } from \"../utils\";\nimport { executeSql } from \"../dbUtils\";\nimport PokemonImage from \"../components/PokemonImage\";\nimport Stats from \"../components/Stats\";\nimport EvolutionChain from \"../components/EvolutionChain\";\nimport HeartButton from \"../components/HeartButton\";\n\nconst Container = styled.ScrollView`\n  background-color: \"rgb(229,229,234)\";\n  height: 100%;\n`;\n\nconst Card = styled.View`\n  background-color: white;\n  margin: 30px;\n  border-radius: 10px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Name = styled.Text`\n  font-size: 22px;\n  font-weight: bold;\n  color: rgb(72, 72, 74);\n  margin-bottom: 10px;\n`;\n\nconst Types = styled.View`\n  height: 50px;\n  width: 60%;\n  /* background-color: red; */\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst Type = styled.View`\n  height: 30px;\n  padding: 5px 10px;\n  border: 2px solid ${(props) => props.color};\n  border-radius: 10px;\n  align-items: center;\n  justify-content: center;\n  /* background-color: blue; */\n`;\n\nconst TypeLabel = styled.Text`\n  text-transform: uppercase;\n  color: ${(props) => props.color};\n`;\n\nconst Description = styled.Text`\n  font-size: 14px;\n  text-align: justify;\n  line-height: 22px;\n  margin: 10px 20px;\n  color: rgb(72, 72, 74);\n`;\n\nexport default function PokemonDetail({ route, navigation }) {\n  const [fadeAnim] = useState(new Animated.Value(0));\n  const [localDetails, setLocalDetails] = useState({});\n  const [apiDetails, setApiDetails] = useState({});\n  const [fetchOk, setFetchOk] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { id, evolution_chain } = route.params;\n\n  useEffect(() => {\n    // Animation on mount\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500,\n    }).start();\n    //---\n    setFetchOk(false);\n    executeSql(`select * from pokemon where id = ?;`, [id]).then(([p]) => {\n      // array destructuring is used because there only one item\n      p.types = JSON.parse(p.types);\n      setLocalDetails(p);\n    });\n    let isMounted = true;\n    fetch(`${pokeApi}pokemon/${id}`)\n      .then((data) => data.json())\n      .then(({ stats, weight, height }) => {\n        return {\n          stats,\n          height,\n          weight,\n        };\n      })\n      .catch(() => {\n        // TODO\n        return \"Error\";\n      })\n      .then((pokemon) => {\n        fetch(`${pokeApi}evolution-chain/${evolution_chain}`)\n          .then((data) => data.json())\n          .then((data) => {\n            if (data) {\n              let { chain } = data;\n              chain = generateEvolutionChain(chain);\n              // Avoid state change if component is unmounted\n              if (isMounted) {\n                setApiDetails({\n                  ...pokemon,\n                  chain,\n                });\n                setFetchOk(true);\n              }\n            }\n          })\n          .catch((e) => {\n            // TODO\n            return \"Error\";\n          });\n      });\n    return () => (isMounted = false);\n  }, [id]);\n\n  const setOwned = (data, id) => {\n    executeSql(`update pokemon set owned = ? where id = ?;`, [data, id]);\n  };\n\n  const scrollRef = useRef();\n\n  const { name, types, sprite, desc, color, owned } =\n    localDetails && localDetails;\n\n  return (\n    <Animated.View style={{ opacity: fadeAnim }}>\n      <Container ref={scrollRef}>\n        {localDetails.name && (\n          <Card>\n            <HeartButton owned={owned} id={id} setOwned={setOwned} />\n            <PokemonImage size={\"150px\"} uri={sprite} />\n            <Name>{capitalize(name)}</Name>\n            <Types>\n              {types.map((type) => (\n                <Type key={type.slot} color=\"rgb(72, 72, 74)\">\n                  <TypeLabel color=\"rgb(72, 72, 74)\">\n                    {type.type.name}\n                  </TypeLabel>\n                </Type>\n              ))}\n            </Types>\n            <Description>{desc}</Description>\n            <Stats apiDetails={apiDetails} color={color} fetchOk={fetchOk} />\n            <EvolutionChain\n              apiDetails={apiDetails}\n              navigation={navigation}\n              sprite={sprite}\n              color={color}\n              scrollRef={scrollRef}\n            />\n          </Card>\n        )}\n      </Container>\n    </Animated.View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}